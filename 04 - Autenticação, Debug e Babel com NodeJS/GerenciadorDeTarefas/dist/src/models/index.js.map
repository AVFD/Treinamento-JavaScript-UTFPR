{"version":3,"sources":["../../../src/models/index.js"],"names":["debug","require","basename","module","filename","env","process","NODE_ENV","config","dialectOptions","charset","define","freezeTableName","timestamps","operatorsAliases","$eq","eq","$ne","ne","$gte","gte","$gt","gt","$lte","lte","$lt","lt","$not","not","$in","in","$notIn","notIn","$is","is","$like","like","$notLike","notLike","$iLike","iLike","$notILike","notILike","$regexp","regexp","$notRegexp","notRegexp","$iRegexp","iRegexp","$notIRegexp","notIRegexp","$between","between","$notBetween","notBetween","$overlap","overlap","$contains","contains","$contained","contained","$adjacent","adjacent","$strictLeft","strictLeft","$strictRight","strictRight","$noExtendRight","noExtendRight","$noExtendLeft","noExtendLeft","$and","and","$or","or","$any","any","$all","all","$values","values","$col","col","sequelize","database","username","password","db","readdirSync","__dirname","filter","file","indexOf","slice","forEach","fileName","model","import","join","Object","keys","modelName","associate"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,aAAjB,CAAd;;AAEA,IAAMC,WAAW,eAAKA,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASP,QAAQ,0BAAR,EAAoCI,GAApC,CAAf;;AAEAG,OAAOC,cAAP,GAAwB;AACpBC,aAAS,MADW,CACJ;AADI,CAAxB;AAGAF,OAAOG,MAAP,GAAgB;AACZC,qBAAiB,KADL,EACY;AACxBC,gBAAY,IAFA,CAEM;AAFN,CAAhB;AAIAL,OAAOM,gBAAP,GAA0B;AACtBC,SAAK,cAAGC,EADc;AAEtBC,SAAK,cAAGC,EAFc;AAGtBC,UAAM,cAAGC,GAHa;AAItBC,SAAK,cAAGC,EAJc;AAKtBC,UAAM,cAAGC,GALa;AAMtBC,SAAK,cAAGC,EANc;AAOtBC,UAAM,cAAGC,GAPa;AAQtBC,SAAK,cAAGC,EARc;AAStBC,YAAQ,cAAGC,KATW;AAUtBC,SAAK,cAAGC,EAVc;AAWtBC,WAAO,cAAGC,IAXY;AAYtBC,cAAU,cAAGC,OAZS;AAatBC,YAAQ,cAAGC,KAbW;AActBC,eAAW,cAAGC,QAdQ;AAetBC,aAAS,cAAGC,MAfU;AAgBtBC,gBAAY,cAAGC,SAhBO;AAiBtBC,cAAU,cAAGC,OAjBS;AAkBtBC,iBAAa,cAAGC,UAlBM;AAmBtBC,cAAU,cAAGC,OAnBS;AAoBtBC,iBAAa,cAAGC,UApBM;AAqBtBC,cAAU,cAAGC,OArBS;AAsBtBC,eAAW,cAAGC,QAtBQ;AAuBtBC,gBAAY,cAAGC,SAvBO;AAwBtBC,eAAW,cAAGC,QAxBQ;AAyBtBC,iBAAa,cAAGC,UAzBM;AA0BtBC,kBAAc,cAAGC,WA1BK;AA2BtBC,oBAAgB,cAAGC,aA3BG;AA4BtBC,mBAAe,cAAGC,YA5BI;AA6BtBC,UAAM,cAAGC,GA7Ba;AA8BtBC,SAAK,cAAGC,EA9Bc;AA+BtBC,UAAM,cAAGC,GA/Ba;AAgCtBC,UAAM,cAAGC,GAhCa;AAiCtBC,aAAS,cAAGC,MAjCU;AAkCtBC,UAAM,cAAGC;AAlCa,CAA1B;;AAqCO,IAAMC,gCAAY,wBAAc3E,OAAO4E,QAArB,EAA+B5E,OAAO6E,QAAtC,EAAgD7E,OAAO8E,QAAvD,EAAiE9E,MAAjE,CAAlB;;AAEP;;;AAGA,IAAM+E,KAAK,EAAX;;AAEA,aAAGC,WAAH,CAAeC,SAAf,EACKC,MADL,CACY,UAACC,IAAD,EAAU;AACd;AACA,WAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASzF,QAAvC,IAAqDyF,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACH,CAJL,EAKKC,OALL,CAKa,UAACH,IAAD,EAAU;AACf,QAAMI,WAAWJ,KAAKE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAjB;AACA7F,UAAM,cAAc+F,QAApB;AACA,QAAMC,QAAQb,UAAUc,MAAV,CAAiB,eAAKC,IAAL,CAAUT,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAJ,OAAGQ,QAAH,IAAeC,KAAf;AACH,CAVL;;AAYA;AACAG,OAAOC,IAAP,CAAYb,EAAZ,EAAgBO,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACnC,QAAId,GAAGc,SAAH,EAAcC,SAAlB,EAA6B;AACzBtG,cAAM,kBAAkBqG,SAAxB;AACAd,WAAGc,SAAH,EAAcC,SAAd,CAAwBf,EAAxB;AACH;AACJ,CALD;;kBAOeA,E","file":"index.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize, { Op } from 'sequelize';\r\nconst debug = require('debug')('http:models');\r\n\r\nconst basename = path.basename(module.filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\nconst config = require('../../config/config.json')[env];\r\n\r\nconfig.dialectOptions = {\r\n    charset: 'UTF8' // define o charset do banco de dados\r\n};\r\nconfig.define = {\r\n    freezeTableName: false, // permite plural no nome das tabelas\r\n    timestamps: true, // permite a criação das colunas updatedAt e createdAt\r\n};\r\nconfig.operatorsAliases = {\r\n    $eq: Op.eq,\r\n    $ne: Op.ne,\r\n    $gte: Op.gte,\r\n    $gt: Op.gt,\r\n    $lte: Op.lte,\r\n    $lt: Op.lt,\r\n    $not: Op.not,\r\n    $in: Op.in,\r\n    $notIn: Op.notIn,\r\n    $is: Op.is,\r\n    $like: Op.like,\r\n    $notLike: Op.notLike,\r\n    $iLike: Op.iLike,\r\n    $notILike: Op.notILike,\r\n    $regexp: Op.regexp,\r\n    $notRegexp: Op.notRegexp,\r\n    $iRegexp: Op.iRegexp,\r\n    $notIRegexp: Op.notIRegexp,\r\n    $between: Op.between,\r\n    $notBetween: Op.notBetween,\r\n    $overlap: Op.overlap,\r\n    $contains: Op.contains,\r\n    $contained: Op.contained,\r\n    $adjacent: Op.adjacent,\r\n    $strictLeft: Op.strictLeft,\r\n    $strictRight: Op.strictRight,\r\n    $noExtendRight: Op.noExtendRight,\r\n    $noExtendLeft: Op.noExtendLeft,\r\n    $and: Op.and,\r\n    $or: Op.or,\r\n    $any: Op.any,\r\n    $all: Op.all,\r\n    $values: Op.values,\r\n    $col: Op.col\r\n};\r\n\r\nexport const sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n\r\n/**\r\n * @type {Object.<string, Sequelize.Model>}\r\n */\r\nconst db = {};\r\n\r\nfs.readdirSync(__dirname)\r\n    .filter((file) => {\r\n        // seleciona os arquivos com extensão .js\r\n        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\r\n    })\r\n    .forEach((file) => {\r\n        const fileName = file.slice(0, -3);\r\n        debug('Loading: ' + fileName);\r\n        const model = sequelize.import(path.join(__dirname, file));\r\n        db[fileName] = model;\r\n    });\r\n\r\n// Chama a função 'associate' de cada entidade para configurar os relacionamentos\r\nObject.keys(db).forEach((modelName) => {\r\n    if (db[modelName].associate) {\r\n        debug('Associating: ' + modelName);\r\n        db[modelName].associate(db);\r\n    }\r\n});\r\n\r\nexport default db;\r\n"]}